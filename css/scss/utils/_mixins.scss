// Media Queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid
@mixin grid($columns: 1, $gap: $grid-gap) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography
@mixin heading($size, $weight: $font-weight-bold) {
  font-family: $font-family-heading;
  font-size: $size;
  font-weight: $weight;
  line-height: 1.2;
  margin-bottom: $spacing-md;
}

// Buttons
@mixin button($background: $primary-color, $color: $white) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $button-padding-y $button-padding-x;
  background-color: $background;
  color: $color;
  border: none;
  border-radius: $button-border-radius;
  font-weight: $button-font-weight;
  transition: $button-transition;
  cursor: pointer;

  &:hover {
    transform: translateY(-1px);
    box-shadow: $shadow-md;
  }
}

// Cards
@mixin card {
  background: $white;
  border-radius: $card-border-radius;
  box-shadow: $card-shadow;
  padding: $card-padding;
  transition: $transition-base;

  &:hover {
    box-shadow: $card-hover-shadow;
  }
}

// Property Cards
@mixin property-card {
  @include card;
  width: $property-card-width;
  overflow: hidden;

  .property-image {
    height: $property-image-height;
    width: 100%;
    object-fit: cover;
  }

  .property-details {
    padding: $spacing-md;
  }

  .property-price {
    color: $property-price-color;
    @include heading(1.5rem);
  }
}

// Forms
@mixin form-input {
  width: 100%;
  height: $input-height;
  padding: $input-padding;
  border: 1px solid $input-border-color;
  border-radius: $border-radius-md;
  transition: $transition-base;

  &:focus {
    outline: none;
    border-color: $input-focus-border-color;
    box-shadow: $input-focus-shadow;
  }
}

// Widgets
@mixin widget {
  background: $widget-background;
  border-radius: $widget-border-radius;
  padding: $widget-padding;
  box-shadow: $widget-shadow;
}

// Animations
@mixin fade-in {
  animation: fadeIn 0.3s ease-in-out;
}

@mixin slide-up {
  animation: slideUp 0.3s ease-in-out;
}

// Utilities
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  &::before {
    content: "";
    display: block;
    padding-top: ($height / $width) * 100%;
  }
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Container
@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $container-padding;
}

// Grid System
@mixin grid-column($columns) {
  grid-column: span $columns;
}

// Responsive Images
@mixin responsive-image {
  max-width: 100%;
  height: auto;
}

// Text Styles
@mixin text-style($size, $weight: $font-weight-normal, $color: $text-color) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: $line-height-base;
}

// Hover Effects
@mixin hover-lift {
  transition: transform $transition-base;
  &:hover {
    transform: translateY(-2px);
  }
}

// Shadows
@mixin shadow($level: md) {
  @if $level == sm {
    box-shadow: $shadow-sm;
  } @else if $level == md {
    box-shadow: $shadow-md;
  } @else if $level == lg {
    box-shadow: $shadow-lg;
  } @else if $level == xl {
    box-shadow: $shadow-xl;
  }
} 