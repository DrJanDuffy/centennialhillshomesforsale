// server.js - Express Server with Advanced Features
import express from 'express'
import { createServer as createViteServer } from 'vite'
import compression from 'compression'
import helmet from 'helmet'
import { fileURLToPath } from 'url'
import { dirname, join } from 'path'
import dotenv from 'dotenv'
import { aiSearchHandler } from './api/ai-search.js'
import { marketDataHandler } from './api/market-data.js'
import { leadScoringHandler } from './api/lead-scoring.js'
import { voiceSearchHandler } from './api/voice-search.js'
import { seoMiddleware } from './middleware/seo.js'
import { performanceMiddleware } from './middleware/performance.js'

dotenv.config()

const __dirname = dirname(fileURLToPath(import.meta.url))
const app = express()
const PORT = process.env.PORT || 3000

// Security & Performance
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'", "https://www.googletagmanager.com"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
      imgSrc: ["'self'", "data:", "https:", "blob:"],
      fontSrc: ["'self'", "https://fonts.gstatic.com"],
      connectSrc: ["'self'", "https://api.followupboss.com", "https://em.realscout.com"]
    }
  }
}))
app.use(compression())
app.use(express.json())
app.use(express.urlencoded({ extended: true }))

// Custom middleware
app.use(seoMiddleware)
app.use(performanceMiddleware)

// API Routes
app.post('/api/ai-search', aiSearchHandler)
app.get('/api/market-data/:area', marketDataHandler)
app.post('/api/lead-scoring', leadScoringHandler)
app.post('/api/voice-search', voiceSearchHandler)

// Dynamic sitemap generation
app.get('/sitemap.xml', async (req, res) => {
  const sitemap = await generateSitemap()
  res.header('Content-Type', 'application/xml')
  res.send(sitemap)
})

// Robots.txt with crawl budget optimization
app.get('/robots.txt', (req, res) => {
  res.type('text/plain')
  res.send(`User-agent: *
Allow: /
Disallow: /api/
Disallow: /admin/

Sitemap: https://www.centennialhillshomesforsale.com/sitemap.xml

# Crawl-delay for responsible crawling
Crawl-delay: 1`)
})

async function createServer() {
  if (process.env.NODE_ENV === 'production') {
    app.use(express.static(join(__dirname, 'dist')))
    app.get('*', (req, res) => {
      res.sendFile(join(__dirname, 'dist', 'index.html'))
    })
  } else {
    const vite = await createViteServer({
      server: { middlewareMode: true },
      appType: 'spa'
    })
    app.use(vite.middlewares)
  }

  app.listen(PORT, () => {
    console.log(`üè† Centennial Hills Homes server running on http://localhost:${PORT}`)
  })
}

createServer()

// vite.config.js
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import { VitePWA } from 'vite-plugin-pwa'
import viteCompression from 'vite-plugin-compression'
import { visualizer } from 'rollup-plugin-visualizer'

export default defineConfig({
  plugins: [
    react(),
    VitePWA({
      registerType: 'autoUpdate',
      includeAssets: ['favicon.ico', 'robots.txt', 'apple-touch-icon.png'],
      manifest: {
        name: 'Centennial Hills Homes For Sale',
        short_name: 'CH Homes',
        theme_color: '#1e40af',
        icons: [
          { src: '/pwa-192x192.png', sizes: '192x192', type: 'image/png' },
          { src: '/pwa-512x512.png', sizes: '512x512', type: 'image/png' }
        ]
      },
      workbox: {
        runtimeCaching: [
          {
            urlPattern: /^https:\/\/api\.followupboss\.com\/.*/i,
            handler: 'NetworkFirst',
            options: {
              cacheName: 'crm-cache',
              expiration: { maxEntries: 10, maxAgeSeconds: 86400 }
            }
          }
        ]
      }
    }),
    viteCompression({
      algorithm: 'brotliCompress',
      ext: '.br'
    }),
    visualizer({
      open: true,
      gzipSize: true,
      brotliSize: true
    })
  ],
  build: {
    rollupOptions: {
      output: {
        manualChunks: {
          'react-vendor': ['react', 'react-dom'],
          'ui-vendor': ['framer-motion', '@headlessui/react'],
          'utils': ['lodash-es', 'date-fns']
        }
      }
    },
    minify: 'terser',
    terserOptions: {
      compress: {
        drop_console: true,
        drop_debugger: true
      }
    }
  },
  optimizeDeps: {
    include: ['react', 'react-dom']
  }
})

// src/main.jsx - React Entry Point
import React from 'react'
import ReactDOM from 'react-dom/client'
import { BrowserRouter } from 'react-router-dom'
import App from './App'
import './index.css'
import { initializeAnalytics } from './lib/analytics'
import { registerServiceWorker } from './lib/service-worker'

// Initialize performance monitoring
if ('requestIdleCallback' in window) {
  requestIdleCallback(() => {
    initializeAnalytics()
    registerServiceWorker()
  })
} else {
  setTimeout(() => {
    initializeAnalytics()
    registerServiceWorker()
  }, 1)
}

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </React.StrictMode>
)

// src/App.jsx - Main App Component
import { Routes, Route, useLocation } from 'react-router-dom'
import { lazy, Suspense, useEffect } from 'react'
import { AnimatePresence } from 'framer-motion'
import Layout from './components/Layout'
import LoadingSpinner from './components/LoadingSpinner'
import { usePredictiveLoading } from './hooks/usePredictiveLoading'
import { useVoiceCommands } from './hooks/useVoiceCommands'

// Lazy load pages for better performance
const Home = lazy(() => import('./pages/Home'))
const Properties = lazy(() => import('./pages/Properties'))
const Neighborhoods = lazy(() => import('./pages/Neighborhoods'))
const MarketReport = lazy(() => import('./pages/MarketReport'))
const HomeValue = lazy(() => import('./pages/HomeValue'))
const About = lazy(() => import('./pages/About'))
const Contact = lazy(() => import('./pages/Contact'))

export default function App() {
  const location = useLocation()
  usePredictiveLoading()
  useVoiceCommands()

  useEffect(() => {
    // Track page views
    if (window.gtag) {
      window.gtag('event', 'page_view', {
        page_path: location.pathname,
        page_title: document.title
      })
    }
  }, [location])

  return (
    <Layout>
      <AnimatePresence mode="wait">
        <Suspense fallback={<LoadingSpinner />}>
          <Routes location={location} key={location.pathname}>
            <Route path="/" element={<Home />} />
            <Route path="/properties" element={<Properties />} />
            <Route path="/neighborhoods" element={<Neighborhoods />} />
            <Route path="/market-report" element={<MarketReport />} />
            <Route path="/home-value" element={<HomeValue />} />
            <Route path="/about" element={<About />} />
            <Route path="/contact" element={<Contact />} />
          </Routes>
        </Suspense>
      </AnimatePresence>
    </Layout>
  )
}

// src/pages/Home.jsx - Optimized Homepage
import { motion } from 'framer-motion'
import Hero from '../components/home/Hero'
import AISearch from '../components/home/AISearch'
import FeaturedProperties from '../components/home/FeaturedProperties'
import MarketSnapshot from '../components/home/MarketSnapshot'
import Testimonials from '../components/home/Testimonials'
import CTASection from '../components/home/CTASection'
import StructuredData from '../components/StructuredData'

export default function Home() {
  return (
    <>
      <StructuredData />
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
      >
        <Hero />
        <AISearch />
        <FeaturedProperties />
        <MarketSnapshot />
        <Testimonials />
        <CTASection />
      </motion.div>
    </>
  )
}


            className="w-full h-full object-cover"
            loading="eager"
            fetchpriority="high"
          />
        </picture>
        <div className="absolute inset-0 bg-gradient-to-b from-blue-900/70 to-blue-900/40" />
      </div>

      <div className="relative z-10 max-w-7xl mx-auto px-4 text-center" ref={ref}>
        <motion.div
          initial={{ y: 30, opacity: 0 }}
          animate={inView ? { y: 0, opacity: 1 } : {}}
          transition={{ duration: 0.6 }}
        >
          <h1 className="text-5xl md:text-7xl font-bold text-white mb-6 leading-tight">
            Centennial Hills
            <span className="block text-3xl md:text-5xl mt-2 text-blue-200">
              {dynamicHeadline}
            </span>
          </h1>
          
          <p className="text-xl md:text-2xl text-white/90 mb-8 max-w-3xl mx-auto">
            Discover luxury living in Las Vegas's premier master-planned community. 
            From stunning estates to family-friendly neighborhoods, your perfect home awaits.
          </p>

          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-4 bg-blue-600 text-white rounded-xl font-semibold text-lg shadow-2xl hover:bg-blue-700 transition-colors"
              onClick={() => document.getElementById('ai-search').scrollIntoView({ behavior: 'smooth' })}
            >
              üîç Search Homes Now
            </motion.button>
            
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="px-8 py-4 bg-white text-blue-900 rounded-xl font-semibold text-lg shadow-2xl hover:bg-gray-100 transition-colors"
              onClick={() => window.location.href = '/home-value'}
            >
              üí∞ Get Home Value
            </motion.button>
          </div>

          {/* Trust indicators */}
          <div className="mt-12 flex flex-wrap justify-center gap-8 text-white/80">
            <div className="flex items-center gap-2">
              <span className="text-2xl">‚≠ê</span>
              <span>5.0 Google Reviews</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-2xl">üèÜ</span>
              <span>Top 1% Agent</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-2xl">üè†</span>
              <span>500+ Homes Sold</span>
            </div>
          </div>
        </motion.div>
      </div>

      {/* Scroll indicator */}
      <motion.div
        className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
        animate={{ y: [0, 10, 0] }}
        transition={{ repeat: Infinity, duration: 1.5 }}
      >
        <svg className="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 14l-7 7m0 0l-7-7m7 7V3" />
        </svg>
      </motion.div>
    </section>
  )
}