name: Vercel Deployment Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Preview Deployments (PRs and develop branch)
  preview:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    name: Preview Deployment

    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --production=false

      - name: Run linting
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_VERCEL_ENV: preview

      - name: Deploy to Vercel (Preview)
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod=false'
          working-directory: ./

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'preview'
            });
            
            if (deployments.length > 0) {
              const deployment = deployments[0];
              const { data: statuses } = await github.rest.repos.listDeploymentStatuses({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: deployment.id
              });
              
              if (statuses.length > 0) {
                const previewUrl = statuses[0].target_url;
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: `ðŸš€ **Preview Deployment Ready!**\n\n**Preview URL:** ${previewUrl}\n\n**Commit:** ${context.sha.substring(0, 7)}\n\n**Environment:** Preview\n\nThis deployment will be automatically updated with each push to this branch.`
                });
              }
            }

  # Production Deployments (main branch only)
  production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    name: Production Deployment
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --production=false

      - name: Run linting
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Run tests (if available)
        run: npm test --if-present

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_VERCEL_ENV: production

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: Notify deployment success
        run: |
          echo "ðŸš€ Production deployment successful!"
          echo "URL: https://centennialhillshomesforsale.com"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"

  # Security and Quality Checks
  security:
    runs-on: ubuntu-latest
    name: Security & Quality
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --production=false

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for outdated packages
        run: npm outdated || true

      - name: Run Biome checks
        run: npm run biome:check

      - name: Bundle analysis
        run: npm run analyze
        env:
          ANALYZE: true

  # Performance Monitoring
  performance:
    runs-on: ubuntu-latest
    name: Performance Check
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit --production=false

      - name: Build for analysis
        run: npm run build
        env:
          ANALYZE: true

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: .next/analyze/
          retention-days: 30
